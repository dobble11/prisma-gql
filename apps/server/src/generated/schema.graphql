# The following content is automatically generated by the server, please do not modify it manually.

input BooleanFilter {
  equals: Boolean
  in: [Boolean!]
  is: Boolean
  isNot: Boolean
  not: BooleanFilter
  notIn: [Boolean!]
}

type CurrentUserInfo {
  id: String!
  name: String
}

scalar Date

input DateTimeFilter {
  equals: Date
  gt: Date
  gte: Date
  in: [Date!]
  is: Date
  isNot: Date
  lt: Date
  lte: Date
  not: DateTimeFilter
  notIn: [Date!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  is: Int
  isNot: Int
  lt: Int
  lte: Int
  not: IntFilter
  notIn: [Int!]
}

type Mutation {
  createUser(data: UserCreateInput!): User!
}

enum OrderBy {
  Asc
  Desc
}

type Query {
  currentUserInfo: CurrentUserInfo!
  users(orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  is: String
  isNot: String
  lt: String
  lte: String
  not: StringFilter
  notIn: [String!]
  startsWith: String
}

type User {
  email: String!
  id: ID!
  name: String
}

input UserCreateInput {
  email: String!
  name: String!
}

input UserOrderByWithRelationInput {
  createdAt: OrderBy
  name: OrderBy
  updatedAt: OrderBy
}

input UserWhereInput {
  email: String
  id: String
  name: StringFilter
}